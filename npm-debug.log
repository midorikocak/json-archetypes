0 info it worked if it ends with ok
1 verbose cli [ '/Users/austen/.nvm/v0.10.33/bin/node',
1 verbose cli   '/Users/austen/.nvm/v0.10.33/bin/npm',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@1.4.28
3 info using node@v0.10.33
4 verbose publish [ './' ]
5 verbose cache add [ './', null ]
6 verbose cache add name=undefined spec="./" args=["./",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: './',
7 verbose parsed url   path: './',
7 verbose parsed url   href: './' }
8 silly lockFile 0ee6c175- ./
9 verbose lock ./ /Users/austen/.npm/0ee6c175-.lock
10 verbose tar pack [ '/Users/austen/.npm/json-archetypes/0.0.20/package.tgz',
10 verbose tar pack   './' ]
11 verbose tarball /Users/austen/.npm/json-archetypes/0.0.20/package.tgz
12 verbose folder ./
13 info prepublish json-archetypes@0.0.20
14 silly lockFile 04cb2bca-tar tar://./
15 verbose lock tar://./ /Users/austen/.npm/04cb2bca-tar.lock
16 silly lockFile d0553bd0-on-archetypes-0-0-20-package-tgz tar:///Users/austen/.npm/json-archetypes/0.0.20/package.tgz
17 verbose lock tar:///Users/austen/.npm/json-archetypes/0.0.20/package.tgz /Users/austen/.npm/d0553bd0-on-archetypes-0-0-20-package-tgz.lock
18 silly lockFile 04cb2bca-tar tar://./
19 silly lockFile 04cb2bca-tar tar://./
20 silly lockFile d0553bd0-on-archetypes-0-0-20-package-tgz tar:///Users/austen/.npm/json-archetypes/0.0.20/package.tgz
21 silly lockFile d0553bd0-on-archetypes-0-0-20-package-tgz tar:///Users/austen/.npm/json-archetypes/0.0.20/package.tgz
22 silly lockFile 751031a5-m-json-archetypes-0-0-20-package /Users/austen/.npm/json-archetypes/0.0.20/package
23 verbose lock /Users/austen/.npm/json-archetypes/0.0.20/package /Users/austen/.npm/751031a5-m-json-archetypes-0-0-20-package.lock
24 silly lockFile 751031a5-m-json-archetypes-0-0-20-package /Users/austen/.npm/json-archetypes/0.0.20/package
25 silly lockFile 751031a5-m-json-archetypes-0-0-20-package /Users/austen/.npm/json-archetypes/0.0.20/package
26 silly lockFile 0ee6c175- ./
27 silly lockFile 0ee6c175- ./
28 silly publish { name: 'json-archetypes',
28 silly publish   author: { name: 'Austen Collins' },
28 silly publish   version: '0.0.20',
28 silly publish   description: 'Open-source JSON Models For Popular Types Of Data',
28 silly publish   main: 'index.js',
28 silly publish   repository:
28 silly publish    { type: 'git',
28 silly publish      url: 'git://github.com/servant-app/json-archetypes.git' },
28 silly publish   keywords:
28 silly publish    [ 'json',
28 silly publish      'schema',
28 silly publish      'model',
28 silly publish      'standards',
28 silly publish      'archetypes',
28 silly publish      'products',
28 silly publish      'images',
28 silly publish      'events',
28 silly publish      'servant' ],
28 silly publish   license: 'BSD-2-Clause',
28 silly publish   bugs: { url: 'https://github.com/servant-app/json-archetypes/issues' },
28 silly publish   scripts: { test: 'node ./test/test.js | tap-spec' },
28 silly publish   dependencies: {},
28 silly publish   devDependencies:
28 silly publish    { async: '0.9.0',
28 silly publish      'tap-spec': '0.2.0',
28 silly publish      tape: '2.13.3',
28 silly publish      'z-schema': '2.4.8' },
28 silly publish   readme: '![json archetypes data standards](https://github.com/servant-cmes/json-archetypes/blob/master/json_archetypes_banner.png)\n\n#JSON Archetypes\n\n####Community-Driven Standards For Popular Types Of Data in JSON\n\nThe point of the Archetypes is to agree on data models that are easy and fun to develop applications with.  That is all.\n\n*Status: Waiting to receive feedback from more people before launching JSON Archetypes Version 1*\n\nThese are part of [Servant](https://www.servant.co).  Servant is cloud storage for the Archetypes.  If you build an application using Archetypes, you can use Servant as your database, and Servant will pay you for each API Request you make to it.   [More info on that here.](https://developers.servant.co)\n\nEach JSON Archetype uses the [JSON Schema](http://json-schema.org "http://json-schema.org") format to describe the Archetype and its validation rules.  All of the Archetypes can be found in the `archetypes` folder.  JSON Archetypes are meant to be lean and contain only the essential properties/attributes that define and differentiate each archetype.  The challenge is to agree on what those properties/attributes are...\n\n*This repo is only for defining schemas  If you\'re looking for helper methods to quickly instantiate valid Data Archetypes and work with them in your applications, check out the Servant SDKs.*\n \n**Feel free to contribute to the existing JSON Archetypes or create your own!**\n\n\n##Contributing\nAnyone who has a JSON Archetype in mind, or wants to add to existing JSON Archetypes is free to contribute.  Just follow these steps:\n\n - Fork this project.\n - Clone your forked project (which should now be in your github account) to your computer.\n - Create a branch and work on it to create/modify existing JSON Archetypes\n - Try to submit pull requests for one Archetype at a time\n\nMore on how to contribute to a Github project [here](https://guides.github.com/activities/contributing-to-open-source/).\n\n##Design Principles\n\n - **Shallow Architecture -**  Don\'t add nested objects.  Only Arrays are allowed, and if they contain objects, keep those objects small.  Shallow architecture makes the Archetypes more accessible using simpler queries that can be effectively indexed to scale well.\n - **Unique Property Names -** Every property name in an Archetype must be unique.\n - **Follow The JSON Schema Specs -** http://json-schema.org/example1.html \n - **Copy Schema.org Schemas wherever you can -** http://schema.org \n\n\n##F.A.Q.\n###How is this different from Schema.org?\nJSON Archetypes are simpler versions of the schemas on schema.org.  While application developers can comprehend [the verbose, nested data architecture Schema.org uses](http://schema.org/docs/full.html "http://schema.org/docs/full.html"), it\'s still complex and not much fun to work with.\n\nThat said, we’ve tried to copy schema.org schemas wherever possible, as well as their property names, so there will be interoperability.  Hopefully we can evolve to further resemble schema.org in the future.\n\n###Can I add additional properties to the Archetypes?\nYes, but do it in your own application.  Most of the time, developers want to put properties on the Archetypes that are only relevant to the applications they want to make.  Nothing wrong with that.  Most people make **meta** objects for each Archetype and save them in their application’s own database.  There are infinite use-cases for the Archetypes, and if we attached properties for each we’d have infinite bloat. \n\nOtherwise, if you think the property is absolutely necessary, contribute to this repo :)\n\n###As a User, how can I store extra data in each Archetype (e.g. obscure product details)?\nArchetypes aren\'t going to be perfect for everyone.  But don\'t let the perfect be the enemy of good.  \n\nOccasionally, you may not be able to find room to squeeze in obscure details.  On the other hand, JSON Archetypes radically increase distribution and productivity of your data.  Yes, you may miss a small detail, but more importantly, you will be able to show and use your data EVERYWHERE.\n\n###Bro, I found [this comic on XKCD](http://xkcd.com/927/) and it’s totally relevant.  Can I show it to you?\nWe\'ve already seen it, laughed, and moved forward.',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: 'f7b944daa8169e0e55482cdc1fab7ad51f613e46',
28 silly publish   homepage: 'https://github.com/servant-app/json-archetypes',
28 silly publish   _id: 'json-archetypes@0.0.20',
28 silly publish   _shasum: 'd0c44085bff3381e792279c1265f624b9f327ff7',
28 silly publish   _from: './' }
29 verbose request where is /json-archetypes
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 913c6e8e47446184
32 verbose url raw /json-archetypes
33 verbose url resolving [ 'https://registry.npmjs.org/', './json-archetypes' ]
34 verbose url resolved https://registry.npmjs.org/json-archetypes
35 verbose request where is https://registry.npmjs.org/json-archetypes
36 info trying registry request attempt 1 at 18:34:20
37 http PUT https://registry.npmjs.org/json-archetypes
38 http 409 https://registry.npmjs.org/json-archetypes
39 verbose request where is /json-archetypes?write=true
40 verbose request registry https://registry.npmjs.org/
41 verbose url raw /json-archetypes?write=true
42 verbose url resolving [ 'https://registry.npmjs.org/',
42 verbose url resolving   './json-archetypes?write=true' ]
43 verbose url resolved https://registry.npmjs.org/json-archetypes?write=true
44 verbose request where is https://registry.npmjs.org/json-archetypes?write=true
45 info trying registry request attempt 1 at 18:34:21
46 http GET https://registry.npmjs.org/json-archetypes?write=true
47 http 200 https://registry.npmjs.org/json-archetypes?write=true
48 error publish fail Cannot publish over existing version.
48 error publish fail Update the 'version' field in package.json and try again.
48 error publish fail
48 error publish fail If the previous version was published in error, see:
48 error publish fail     npm help unpublish
48 error publish fail
48 error publish fail To automatically increment version numbers, see:
48 error publish fail     npm help version
49 error System Darwin 13.3.0
50 error command "/Users/austen/.nvm/v0.10.33/bin/node" "/Users/austen/.nvm/v0.10.33/bin/npm" "publish" "./"
51 error cwd /Users/austen/Desktop/node/json-archetypes
52 error node -v v0.10.33
53 error npm -v 1.4.28
54 error code EPUBLISHCONFLICT
55 verbose exit [ 1, true ]
